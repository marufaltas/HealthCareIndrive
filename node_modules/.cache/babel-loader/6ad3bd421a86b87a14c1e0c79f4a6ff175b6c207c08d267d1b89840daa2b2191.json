{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pc\\\\Desktop\\\\DnsJumper\\\\backend\\\\nurse-tracking-Patient\\\\src\\\\AdminPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport AdminServices from \"./components/AdminServices\";\n\n// استخدم هذا المتغير في كل fetch بدلاً من كتابة الرابط مباشرة\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = window.location.hostname === \"localhost\" ? \"http://localhost:5000\" : \"https://helthend-production.up.railway.app\";\nconst AdminPage = () => {\n  _s();\n  const [allServices, setAllServices] = useState({});\n  // جلب جميع الخدمات من قاعدة البيانات بشكل ديناميكي\n  useEffect(() => {\n    // التخصصات المدعومة (يمكنك إضافة المزيد حسب قاعدة البيانات)\n    const serviceKeys = [\"nurseServices\", \"doctorServices\", \"physioServices\", \"pharmacistServices\", \"labServices\", \"xrayServices\", \"psychologyServices\", \"babycareServices\", \"nutritionServices\"];\n    Promise.all(serviceKeys.map(key => fetch(`${API_BASE}/${key}`).then(res => res.ok ? res.json() : []).catch(() => []))).then(results => {\n      const services = {};\n      serviceKeys.forEach((key, idx) => {\n        services[key] = results[idx] || [];\n      });\n      setAllServices(services);\n    });\n  }, []);\n\n  // تحديث الأسعار (هنا يجب ربطها بباك اند حقيقي أو json-server)\n  const handleUpdate = updated => {\n    setAllServices(updated);\n    // تحديث الأسعار فعلياً في json-server\n    Object.keys(updated).forEach(serviceType => {\n      updated[serviceType].forEach(service => {\n        fetch(`${API_BASE}/${serviceType}/${service.id}`, {\n          method: 'PATCH',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            basePrice: service.basePrice\n          })\n        });\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(AdminServices, {\n    allServices: allServices,\n    onUpdate: handleUpdate\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 10\n  }, this);\n};\n_s(AdminPage, \"aHp60IB7fUys85AT7rBAEodJCII=\");\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useEffect","useState","AdminServices","jsxDEV","_jsxDEV","API_BASE","window","location","hostname","AdminPage","_s","allServices","setAllServices","serviceKeys","Promise","all","map","key","fetch","then","res","ok","json","catch","results","services","forEach","idx","handleUpdate","updated","Object","keys","serviceType","service","id","method","headers","body","JSON","stringify","basePrice","onUpdate","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Pc/Desktop/DnsJumper/backend/nurse-tracking-Patient/src/AdminPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport AdminServices from \"./components/AdminServices\";\r\n\r\n// استخدم هذا المتغير في كل fetch بدلاً من كتابة الرابط مباشرة\r\nconst API_BASE =\r\n  window.location.hostname === \"localhost\"\r\n    ? \"http://localhost:5000\"\r\n    : \"https://helthend-production.up.railway.app\";\r\n\r\nconst AdminPage = () => {\r\n  const [allServices, setAllServices] = useState({});\r\n  // جلب جميع الخدمات من قاعدة البيانات بشكل ديناميكي\r\n  useEffect(() => {\r\n    // التخصصات المدعومة (يمكنك إضافة المزيد حسب قاعدة البيانات)\r\n    const serviceKeys = [\r\n      \"nurseServices\",\r\n      \"doctorServices\",\r\n      \"physioServices\",\r\n      \"pharmacistServices\",\r\n      \"labServices\",\r\n      \"xrayServices\",\r\n      \"psychologyServices\",\r\n      \"babycareServices\",\r\n      \"nutritionServices\"\r\n    ];\r\n    Promise.all(\r\n      serviceKeys.map(key =>\r\n        fetch(`${API_BASE}/${key}`)\r\n          .then(res => res.ok ? res.json() : [])\r\n          .catch(() => [])\r\n      )\r\n    ).then(results => {\r\n      const services = {};\r\n      serviceKeys.forEach((key, idx) => {\r\n        services[key] = results[idx] || [];\r\n      });\r\n      setAllServices(services);\r\n    });\r\n  }, []);\r\n\r\n  // تحديث الأسعار (هنا يجب ربطها بباك اند حقيقي أو json-server)\r\n  const handleUpdate = (updated) => {\r\n    setAllServices(updated);\r\n    // تحديث الأسعار فعلياً في json-server\r\n    Object.keys(updated).forEach(serviceType => {\r\n      updated[serviceType].forEach(service => {\r\n        fetch(`${API_BASE}/${serviceType}/${service.id}`, {\r\n          method: 'PATCH',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ basePrice: service.basePrice })\r\n        });\r\n      });\r\n    });\r\n  };\r\n\r\n  return <AdminServices allServices={allServices} onUpdate={handleUpdate} />;\r\n};\r\n\r\nexport default AdminPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,4BAA4B;;AAEtD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,QAAQ,GACZC,MAAM,CAACC,QAAQ,CAACC,QAAQ,KAAK,WAAW,GACpC,uBAAuB,GACvB,4CAA4C;AAElD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD;EACAD,SAAS,CAAC,MAAM;IACd;IACA,MAAMa,WAAW,GAAG,CAClB,eAAe,EACf,gBAAgB,EAChB,gBAAgB,EAChB,oBAAoB,EACpB,aAAa,EACb,cAAc,EACd,oBAAoB,EACpB,kBAAkB,EAClB,mBAAmB,CACpB;IACDC,OAAO,CAACC,GAAG,CACTF,WAAW,CAACG,GAAG,CAACC,GAAG,IACjBC,KAAK,CAAC,GAAGb,QAAQ,IAAIY,GAAG,EAAE,CAAC,CACxBE,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,EAAE,GAAGD,GAAG,CAACE,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CACrCC,KAAK,CAAC,MAAM,EAAE,CACnB,CACF,CAAC,CAACJ,IAAI,CAACK,OAAO,IAAI;MAChB,MAAMC,QAAQ,GAAG,CAAC,CAAC;MACnBZ,WAAW,CAACa,OAAO,CAAC,CAACT,GAAG,EAAEU,GAAG,KAAK;QAChCF,QAAQ,CAACR,GAAG,CAAC,GAAGO,OAAO,CAACG,GAAG,CAAC,IAAI,EAAE;MACpC,CAAC,CAAC;MACFf,cAAc,CAACa,QAAQ,CAAC;IAC1B,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMG,YAAY,GAAIC,OAAO,IAAK;IAChCjB,cAAc,CAACiB,OAAO,CAAC;IACvB;IACAC,MAAM,CAACC,IAAI,CAACF,OAAO,CAAC,CAACH,OAAO,CAACM,WAAW,IAAI;MAC1CH,OAAO,CAACG,WAAW,CAAC,CAACN,OAAO,CAACO,OAAO,IAAI;QACtCf,KAAK,CAAC,GAAGb,QAAQ,IAAI2B,WAAW,IAAIC,OAAO,CAACC,EAAE,EAAE,EAAE;UAChDC,MAAM,EAAE,OAAO;UACfC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEC,SAAS,EAAEP,OAAO,CAACO;UAAU,CAAC;QACvD,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC;EAED,oBAAOpC,OAAA,CAACF,aAAa;IAACS,WAAW,EAAEA,WAAY;IAAC8B,QAAQ,EAAEb;EAAa;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC5E,CAAC;AAACnC,EAAA,CA/CID,SAAS;AAAAqC,EAAA,GAATrC,SAAS;AAiDf,eAAeA,SAAS;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
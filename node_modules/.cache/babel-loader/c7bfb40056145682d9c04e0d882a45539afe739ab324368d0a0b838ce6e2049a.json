{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pc\\\\Desktop\\\\DnsJumper\\\\backend\\\\nurse-tracking-Patient\\\\src\\\\AdminPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport AdminServices from \"./components/AdminServices\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPage = () => {\n  _s();\n  const [allServices, setAllServices] = useState({\n    nurseServices: [],\n    doctorServices: [],\n    physioServices: []\n  });\n\n  // جلب جميع الخدمات من قاعدة البيانات\n  useEffect(() => {\n    fetch(\"/db.json\").then(res => res.json()).then(data => setAllServices({\n      nurseServices: data.nurseServices || [],\n      doctorServices: data.doctorServices || [],\n      physioServices: data.physioServices || []\n    }));\n  }, []);\n\n  // تحديث الأسعار (هنا يجب ربطها بباك اند حقيقي أو json-server)\n  const handleUpdate = updated => {\n    setAllServices(updated);\n    // مثال: إرسال البيانات للباك اند\n    // fetch('/api/services', { method: 'PUT', body: JSON.stringify(updated) })\n  };\n  return /*#__PURE__*/_jsxDEV(AdminServices, {\n    allServices: allServices,\n    onUpdate: handleUpdate\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 10\n  }, this);\n};\n_s(AdminPage, \"7UusOWofi+boYoomKXq2QFK7XPk=\");\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useEffect","useState","AdminServices","jsxDEV","_jsxDEV","AdminPage","_s","allServices","setAllServices","nurseServices","doctorServices","physioServices","fetch","then","res","json","data","handleUpdate","updated","onUpdate","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Pc/Desktop/DnsJumper/backend/nurse-tracking-Patient/src/AdminPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport AdminServices from \"./components/AdminServices\";\r\n\r\nconst AdminPage = () => {\r\n  const [allServices, setAllServices] = useState({\r\n    nurseServices: [],\r\n    doctorServices: [],\r\n    physioServices: [],\r\n  });\r\n\r\n  // جلب جميع الخدمات من قاعدة البيانات\r\n  useEffect(() => {\r\n    fetch(\"/db.json\")\r\n      .then((res) => res.json())\r\n      .then((data) => setAllServices({\r\n        nurseServices: data.nurseServices || [],\r\n        doctorServices: data.doctorServices || [],\r\n        physioServices: data.physioServices || [],\r\n      }));\r\n  }, []);\r\n\r\n  // تحديث الأسعار (هنا يجب ربطها بباك اند حقيقي أو json-server)\r\n  const handleUpdate = (updated) => {\r\n    setAllServices(updated);\r\n    // مثال: إرسال البيانات للباك اند\r\n    // fetch('/api/services', { method: 'PUT', body: JSON.stringify(updated) })\r\n  };\r\n\r\n  return <AdminServices allServices={allServices} onUpdate={handleUpdate} />;\r\n};\r\n\r\nexport default AdminPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC;IAC7CQ,aAAa,EAAE,EAAE;IACjBC,cAAc,EAAE,EAAE;IAClBC,cAAc,EAAE;EAClB,CAAC,CAAC;;EAEF;EACAX,SAAS,CAAC,MAAM;IACdY,KAAK,CAAC,UAAU,CAAC,CACdC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKR,cAAc,CAAC;MAC7BC,aAAa,EAAEO,IAAI,CAACP,aAAa,IAAI,EAAE;MACvCC,cAAc,EAAEM,IAAI,CAACN,cAAc,IAAI,EAAE;MACzCC,cAAc,EAAEK,IAAI,CAACL,cAAc,IAAI;IACzC,CAAC,CAAC,CAAC;EACP,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMM,YAAY,GAAIC,OAAO,IAAK;IAChCV,cAAc,CAACU,OAAO,CAAC;IACvB;IACA;EACF,CAAC;EAED,oBAAOd,OAAA,CAACF,aAAa;IAACK,WAAW,EAAEA,WAAY;IAACY,QAAQ,EAAEF;EAAa;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC5E,CAAC;AAACjB,EAAA,CA1BID,SAAS;AAAAmB,EAAA,GAATnB,SAAS;AA4Bf,eAAeA,SAAS;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
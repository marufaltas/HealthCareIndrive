{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import AdminServices from\"./components/AdminServices\";import{jsx as _jsx}from\"react/jsx-runtime\";const AdminPage=()=>{const[allServices,setAllServices]=useState({});// جلب جميع الخدمات من قاعدة البيانات بشكل ديناميكي\nuseEffect(()=>{// التخصصات المدعومة (يمكنك إضافة المزيد حسب قاعدة البيانات)\nconst serviceKeys=[\"nurseServices\",\"doctorServices\",\"physioServices\",\"pharmacistServices\",\"labServices\",\"xrayServices\"];Promise.all(serviceKeys.map(key=>fetch(`http://localhost:5000/${key}`).then(res=>res.ok?res.json():[]).catch(()=>[]))).then(results=>{const services={};serviceKeys.forEach((key,idx)=>{services[key]=results[idx]||[];});setAllServices(services);});},[]);// تحديث الأسعار (هنا يجب ربطها بباك اند حقيقي أو json-server)\nconst handleUpdate=updated=>{setAllServices(updated);// مثال: إرسال البيانات للباك اند\n// fetch('/api/services', { method: 'PUT', body: JSON.stringify(updated) })\n};return/*#__PURE__*/_jsx(AdminServices,{allServices:allServices,onUpdate:handleUpdate});};export default AdminPage;","map":{"version":3,"names":["React","useEffect","useState","AdminServices","jsx","_jsx","AdminPage","allServices","setAllServices","serviceKeys","Promise","all","map","key","fetch","then","res","ok","json","catch","results","services","forEach","idx","handleUpdate","updated","onUpdate"],"sources":["C:/Users/Pc/Desktop/DnsJumper/backend/nurse-tracking-Patient/src/AdminPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport AdminServices from \"./components/AdminServices\";\r\n\r\n\r\nconst AdminPage = () => {\r\n  const [allServices, setAllServices] = useState({});\r\n  // جلب جميع الخدمات من قاعدة البيانات بشكل ديناميكي\r\n  useEffect(() => {\r\n    // التخصصات المدعومة (يمكنك إضافة المزيد حسب قاعدة البيانات)\r\n    const serviceKeys = [\r\n      \"nurseServices\",\r\n      \"doctorServices\",\r\n      \"physioServices\",\r\n      \"pharmacistServices\",\r\n      \"labServices\",\r\n      \"xrayServices\"\r\n    ];\r\n    Promise.all(\r\n      serviceKeys.map(key =>\r\n        fetch(`http://localhost:5000/${key}`)\r\n          .then(res => res.ok ? res.json() : [])\r\n          .catch(() => [])\r\n      )\r\n    ).then(results => {\r\n      const services = {};\r\n      serviceKeys.forEach((key, idx) => {\r\n        services[key] = results[idx] || [];\r\n      });\r\n      setAllServices(services);\r\n    });\r\n  }, []);\r\n\r\n  // تحديث الأسعار (هنا يجب ربطها بباك اند حقيقي أو json-server)\r\n  const handleUpdate = (updated) => {\r\n    setAllServices(updated);\r\n    // مثال: إرسال البيانات للباك اند\r\n    // fetch('/api/services', { method: 'PUT', body: JSON.stringify(updated) })\r\n  };\r\n\r\n  return <AdminServices allServices={allServices} onUpdate={handleUpdate} />;\r\n};\r\n\r\nexport default AdminPage;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,CAAAC,aAAa,KAAM,4BAA4B,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAGvD,KAAM,CAAAC,SAAS,CAAGA,CAAA,GAAM,CACtB,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGN,QAAQ,CAAC,CAAC,CAAC,CAAC,CAClD;AACAD,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAQ,WAAW,CAAG,CAClB,eAAe,CACf,gBAAgB,CAChB,gBAAgB,CAChB,oBAAoB,CACpB,aAAa,CACb,cAAc,CACf,CACDC,OAAO,CAACC,GAAG,CACTF,WAAW,CAACG,GAAG,CAACC,GAAG,EACjBC,KAAK,CAAC,yBAAyBD,GAAG,EAAE,CAAC,CAClCE,IAAI,CAACC,GAAG,EAAIA,GAAG,CAACC,EAAE,CAAGD,GAAG,CAACE,IAAI,CAAC,CAAC,CAAG,EAAE,CAAC,CACrCC,KAAK,CAAC,IAAM,EAAE,CACnB,CACF,CAAC,CAACJ,IAAI,CAACK,OAAO,EAAI,CAChB,KAAM,CAAAC,QAAQ,CAAG,CAAC,CAAC,CACnBZ,WAAW,CAACa,OAAO,CAAC,CAACT,GAAG,CAAEU,GAAG,GAAK,CAChCF,QAAQ,CAACR,GAAG,CAAC,CAAGO,OAAO,CAACG,GAAG,CAAC,EAAI,EAAE,CACpC,CAAC,CAAC,CACFf,cAAc,CAACa,QAAQ,CAAC,CAC1B,CAAC,CAAC,CACJ,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,KAAM,CAAAG,YAAY,CAAIC,OAAO,EAAK,CAChCjB,cAAc,CAACiB,OAAO,CAAC,CACvB;AACA;AACF,CAAC,CAED,mBAAOpB,IAAA,CAACF,aAAa,EAACI,WAAW,CAAEA,WAAY,CAACmB,QAAQ,CAAEF,YAAa,CAAE,CAAC,CAC5E,CAAC,CAED,cAAe,CAAAlB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}